/* Мы обращаемся к элементу по селектру тега
селектр {
    ключ(свойство): значение
 } */
 /* font-size: 20px; РАЗМЕР ШРИФТА, 
 font-style: italic; СТИЛЬ ШРИФТА 
 italic НАКЛОННЫЙ 
 color: red;ЦВЕТ ШРИФТА
 В конце обязательно точка с запятой  */
h1 {
    font-style: italic;
    font-size: 20px;
    color: red;
}

/* * звездочка универсальный селектр, который обращается ко всем элементам(используется редко) */
/* border рамка, 1px толщина,solid сплошная + цвет */
/* * { 
    border: 1px solid black;
} */

/*  Если мы хотим обратиться к какому-то определенному элементу, коих подобие много на странице-то мы задаем элементу класс, а в css используем .класс */
.text {
    color: blueviolet;
}
/* селектр класс пишется через точку, селектр id через решетку */

/* Селектр потомка- т.е. мы можем применять какие-то стиль к элементам,которые расположены внутри другого элемента, например пункты списка */
/* ul li селектор элемента пунктов всех li которые находятся внутри тега списка ul */
/* li будет простым селектором тега  */
ul li {
    text-decoration: underline;
}

/* Если списков ul на стр много, а нужно обратиться к конкретному, опять же используем класс */
.list li {
    text-decoration: line-through;
}

/* Через селектор потомка мы можем обращаться как угожно далеко */
.list img {
    border: 1px solid black;
    width: 30px;
    height: 30px;
}

/* Дочерний селектор т.е. обращение идет к прямому потомку, обозначается хнаком больше > */
ul > li {
    text-decoration: underline;
}

/* Селектор атрибута */
/* Например для форм. у нас естьмножество input чтобы к ним обратиться используем селектор тега input, чтобы обратиться к конкретному типу input[type=""] БЕЗ ПРОБЕЛА */
input[type='text']{
    border: 2px solid red;
}

/* Чтобы найти элемент, который частично содержит какое-то значение, допустим у нас есть ссылки на внутренние и внешние файлы, а нам нужно обратиться ко внешним - прописываем в атрибуте */
a[href^="http://"] {
    border: 1px solid green;
    text-decoration: none;
    color: blue;
}

input[placeholder^="Введите"] {
    border:3px solid yellow;

}

/* ^ обозначает то с чего начинается тот или иной элемент */
/* $ обозначает то на что заканчивается тот или иной элемент */
a[href$=".com"] {
border: 3px solid red;
}

/* Знак содержит это звездочка*  */
a[href*="news"] {
    border: 5px solid blue;
    font-style: italic;
}

/* Селекторы псевдокласса  */
/* Можно найти все ссылки, которые уже посетили- окрасить их в цвет */
a:visited {
    color:red;
}

/* Задаем поведение при наведении с помощью селектора псевдокласса hover */
/* hover + margin- left+ пиксели тогда ссылка будет отьезжать влево на определенное количество пикселей */
a:hover {
    margin-left: 10px;
}

/* hover + цвет при наведении будет окрашивать в этот цвет */
p:hover {
    color:red;
}

/* Фокусировка на обьекте - focus */
input:focus {
    border: 5px solid red;
}

/* Селектор структурных псевдоклассов */
/* К нечетным элементам */
/* ul li:nth-child(odd) {
    background-color: ;
} */

/* К четным элементам */
/* ul li:nth-child(even) {
    background-color: ;
} */

/*Задаем свойства каждому 3-ему элементу (3n), все элементы(n), все со второго(n+2),все с третьего(n+3)*/
/* Если надо обратиться к первому\последнему элементу,то используем first-child или last-child */
ul li:first-child {
    background-color:rgb(236, 157, 157) ;
}

ul li:last-child {
    background-color: darkorchid ;
}

/* Селекторы псевдо элементов, пишутся через 2 двоеточия :: */
/* li::before или after значит что-то будет стоять до или после пункта*/